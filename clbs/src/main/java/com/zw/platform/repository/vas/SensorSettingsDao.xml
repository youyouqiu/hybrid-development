<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.3//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.platform.repository.vas.SensorSettingsDao">
	<!-- 根据传感器类别查询监测管理 -->
	<select id="findByQuery" parameterType="com.zw.platform.domain.vas.mileageSensor.MileageSensorConfigQuery" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
        SELECT
        DISTINCT  tsv.svId id, v.id AS vehicleId,
        v.brand brand,
        vt.vehicle_type,
        v.group_id groupId,
        tsv.*
        FROM
        zw_m_vehicle_info v
        INNER JOIN `zw_m_config` con ON v.id =  con.vehicle_id AND con.flag = 1
        INNER JOIN zw_m_device_info di ON con.device_id = di.id AND di.flag = 1
        INNER JOIN zw_m_assignment_vehicle av ON v.id = av.vehicle_id AND av.flag = 1
        INNER JOIN zw_m_assignment a ON a.id = av.assignment_id AND a.flag = 1
        INNER JOIN zw_m_assignment_user au ON av.assignment_id =  au.assignment_id AND au.flag = 1
        LEFT JOIN zw_m_vehicle_type vt ON vt.id = v.vehicle_type AND vt.flag = 1
        LEFT JOIN
        (
        SELECT
        sv.id  svId,
        sv.vehicle_id svVehicleId,
        sv.sensor_id sensorId,
        sv.sensor_out_id sensorOutId,
        sv.alarm_up alarmUp,
        sv.alarm_down alarmDown,
        sv.over_valve overValve,
        sv.correction_factor_k correctionFactorK,
        sv.correction_factor_b correctionFactorB,
        sv.auto_time autoTime,
        sif.sensor_number sensorNumber,
        sif.baud_rate baudRate,
        sif.odd_even_check oddEvenCheck,
        sif.compensate compensate,
        sif.filter_factor filterFactor,
        sif.sensor_type sensorType,
        sif.remark remark
        FROM zw_m_sensor_vehicle sv,zw_m_sensor_info sif WHERE sif.id=sv.sensor_id AND sif.flag=1
        AND sv.flag=1 AND sif.sensor_type=#{sensorType}
        ) tsv ON tsv.svVehicleId = v.id
        WHERE v.flag = 1
        AND au.user_id = #{userId}
        AND v.brand NOT LIKE '扫%'
        AND a.org_id IN
        <foreach item="item" collection="groupList" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="param != null">
            <if test="param.simpleQueryParam != null and param.simpleQueryParam!=''">
                AND (v.brand LIKE CONCAT('%',#{param.simpleQueryParam},'%') OR tsv.sensorNumber LIKE CONCAT('%',#{param.simpleQueryParam},'%'))
            </if>
            <if test="param.groupId != null and param.groupId!=''">
                AND ag.group_id = #{param.groupId}
            </if>
            <if test="param.assignmentId != null and param.assignmentId!=''">
                AND a.id = #{param.assignmentId}
            </if>
            <if test="param.protocol != null and param.protocol!=''">
                AND di.device_type = #{param.protocol}
            </if>

			<if test="param.vehicleId != null and param.vehicleId!=''">
				AND v.id = #{param.vehicleId}
			</if>
        </if>
        ORDER BY v.create_data_time DESC,v.id asc,tsv.sensorOutId
	</select>

    <select id="findByQuery_COUNT" resultType="Long">
		SELECT COUNT(0) FROM(
			SELECT DISTINCT  sv.id, v.id AS vehicleId
			FROM zw_m_vehicle_info v

			INNER JOIN zw_m_config con ON v.id =  con.vehicle_id AND con.flag = 1
			INNER JOIN zw_m_device_info di ON con.device_id = di.id AND di.flag = 1 AND di.device_type = '1'
			INNER JOIN zw_m_assignment_vehicle av ON v.id = av.vehicle_id AND av.flag = 1
			INNER JOIN zw_m_assignment a ON a.id = av.assignment_id AND a.flag = 1
			INNER JOIN zw_m_assignment_user au ON av.assignment_id = au.assignment_id AND au.flag = 1 AND au.user_id = #{userId}

			LEFT JOIN zw_m_sensor_vehicle sv ON sv.vehicle_id = v.id AND sv.flag = 1
			LEFT JOIN zw_m_sensor_info sif ON sif.id = sv.sensor_id AND sif.flag = 1 AND sif.sensor_type = #{sensorType}
			WHERE v.flag = 1
			<if test="param != null">
				<if test="param.simpleQueryParam != null and param.simpleQueryParam!=''">
					AND (v.brand LIKE CONCAT('%',#{param.simpleQueryParam},'%')
					OR sif.sensor_number LIKE CONCAT('%',#{param.simpleQueryParam},'%'))
				</if>
				<if test="param.assignmentId != null and param.assignmentId!=''">
					AND a.id = #{param.assignmentId}
				</if>
				<if test="param.protocol != null and param.protocol!=''">
					AND di.device_type = #{param.protocol}
				</if>
			</if>) table_count
	</select>
	
	<select id="findByQueryRedis" parameterType="list" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
			SELECT
			DISTINCT  tsv.svId id, v.id AS vehicleId,v.monitorType,
			v.brand brand,
			tsv.*
			FROM
			(
			 SELECT car.id id, car.brand brand, '0' monitorType,car.create_data_time FROM zw_m_vehicle_info car WHERE car.flag=1
			 UNION ALL
			 SELECT peo.id id, peo.people_number brand,'1' monitorType,peo.create_data_time FROM zw_m_people_info peo WHERE peo.flag=1
			 UNION ALL
			 SELECT th.id id, th.thing_number brand,'2' monitorType,th.create_data_time FROM zw_m_thing_info th WHERE th.flag=1
			) v
			LEFT JOIN
			(
			SELECT
			sv.id  svId,
			sv.vehicle_id svVehicleId,
			sv.sensor_id sensorId,
			sv.sensor_out_id sensorOutId,
			sv.alarm_up alarmUp,
			sv.alarm_down alarmDown,
			sv.over_valve overValve,
			sv.correction_factor_k correctionFactorK,
			sv.correction_factor_b correctionFactorB,
			sv.auto_time autoTime,
			sif.sensor_number sensorNumber,
			sif.baud_rate baudRate,
			sif.odd_even_check oddEvenCheck,
			sif.compensate compensate,
			sif.filter_factor filterFactor,
			sif.sensor_type sensorType,
			sif.remark remark
			FROM zw_m_sensor_vehicle sv,zw_m_sensor_info sif WHERE sif.id=sv.sensor_id AND sif.flag=1
			AND sv.flag=1 AND sif.sensor_type=#{sensorType}
			) tsv ON tsv.svVehicleId = v.id
		    <if test="sensorList != null and sensorList.size() > 0">
				AND tsv.svId IN
				<foreach collection="sensorList" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			WHERE 1 =1
			<if test="list != null and list.size() > 0">
			    AND v.id IN
			    <foreach item="item" collection="list" open="(" separator="," close=")">
				   #{item}
			    </foreach>
			</if>
			ORDER BY v.create_data_time DESC,v.id asc,tsv.sensorOutId
	</select>
	
	<select id="findBindingMonitor" resultType="map" parameterType="string">
			SELECT   v.id , GROUP_CONCAT(tsv.type) as type  FROM zw_m_vehicle_info v
			INNER JOIN(
				SELECT	sv.vehicle_id svVehicleId, CONCAT(sif.sensor_number,"#@!@#",sv.id) as type
				FROM zw_m_sensor_vehicle sv,zw_m_sensor_info sif WHERE sif.id=sv.sensor_id AND sif.flag=1
				AND sv.flag=1 AND sif.sensor_type=#{sensorType}
				) tsv ON tsv.svVehicleId = v.id
				WHERE v.flag = 1 AND v.brand NOT LIKE '扫%'
				group by v.id
	</select>

	<select id="findBindingMonitorByType" resultType="map" parameterType="string">
		SELECT
		  v.id,
		  GROUP_CONCAT(tsv.type) AS type
		FROM
		  (SELECT
			car.id,
			car.brand
		  FROM
			zw_m_vehicle_info car
		  WHERE car.flag = 1
		  UNION
		  SELECT
			th.id,
			th.thing_number AS brand
		  FROM
			zw_m_thing_info th
		  WHERE th.flag = 1
		  UNION
		  SELECT
			p.id,
			p.name AS brand
		  FROM
			zw_m_people_info p
		  WHERE p.flag = 1) v
		  INNER JOIN
			(SELECT
			  sv.vehicle_id svVehicleId,
			  CONCAT(sif.sensor_number, "#@!@#", sv.id) AS TYPE
			FROM
			  zw_m_sensor_vehicle sv,
			  zw_m_sensor_info sif
			WHERE sif.id = sv.sensor_id
			  AND sif.flag = 1
			  AND sv.flag = 1
			  AND sif.sensor_type = #{sensorType}) tsv
			ON tsv.svVehicleId = v.id
		WHERE v.brand NOT LIKE '扫%'
		GROUP BY v.id
	</select>

	<!-- 根据传感器id查询监测管理 -->
	<select id="findTransdusermonitorSetById" parameterType="String" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
			SELECT
			sv.id,
			sv.vehicle_id vehicleId,
			sv.sensor_id sensorId,
			sv.sensor_out_id sensorOutId,
			sv.alarm_up alarmUp,
			sv.alarm_down alarmDown,
			sv.over_valve overValve,
			sv.correction_factor_k correctionFactorK,
			sv.correction_factor_b correctionFactorB,
			sv.auto_time autoTime,
			si.sensor_number sensorNumber,
			si.baud_rate baudRate,
			si.odd_even_check oddEvenCheck,
			si.compensate compensate,
			si.filter_factor filterFactor,
			si.sensor_type sensorType,
			si.remark remark,
			vi.brand brand,
			vi.monitorType,
			vi.groupId
			FROM
			zw_m_sensor_vehicle sv
			LEFT JOIN
			(select id,brand,'0' monitorType, group_id groupId  from zw_m_vehicle_info where flag = 1 UNION ALL
			select id,people_number as brand,'1' monitorType, org_id groupId from zw_m_people_info where flag = 1 UNION ALL
			select id,thing_number as brand,'2' monitorType, group_id groupId from zw_m_thing_info where flag = 1) vi ON sv.vehicle_id = vi.id
			LEFT JOIN zw_m_sensor_info si ON sv.sensor_id = si.id
			AND si.flag = 1
			WHERE
			sv.id = #{Id}
			AND sv.flag = 1
	</select>

	<!-- 新增监测管理 -->
	<insert id="addTransdusermonitorSet" parameterType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
		INSERT INTO zw_m_sensor_vehicle (id,sensor_out_id,vehicle_id,sensor_id,alarm_up,alarm_down,over_valve,
		correction_factor_k,correction_factor_b,auto_time,create_data_time,create_data_username) VALUES(#{id},#{sensorOutId},#{vehicleId},#{sensorId},#{alarmUp},#{alarmDown},
		#{overValve},#{correctionFactorK},#{correctionFactorB},#{autoTime},#{createDataTime},#{createDataUsername})
	</insert>
	<!-- 修改传感器设置 -->
	<update id="updateSensorVehicle" parameterType='com.zw.platform.domain.vas.f3.TransdusermonitorSet'>
		update zw_m_sensor_vehicle set
			vehicle_id=#{vehicleId},
			sensor_id=#{sensorId},
			sensor_out_id=#{sensorOutId},
			alarm_up=#{alarmUp},
			alarm_down=#{alarmDown},
			over_valve=#{overValve},
			correction_factor_k=#{correctionFactorK},
			correction_factor_b=#{correctionFactorB},
			auto_time=#{autoTime},
			update_data_time=#{updateDataTime},
			update_data_username=#{updateDataUsername}
			where id =#{id} and flag=1
	</update>
	<!-- 删除传感器设置 -->
	<delete id="deleteSensorVehicle" parameterType="String">
	   update zw_m_sensor_vehicle 
	    set flag = 0
	    where id = #{id}
	</delete>

	<!-- 删除所有对应类型的传感器设置 -->
	<delete id="deleteAllBind">
	   update zw_m_sensor_vehicle
	   set flag = 0
	   where vehicle_id=#{vid}
	   and sensor_id in (select id from zw_m_sensor_info where
	   						<if test="sensorType != -1">
	   							sensor_type=#{sensorType} and
	   						</if>
	   							flag=1)
	</delete>

	<!-- 查询以及绑定传感器的车辆、人、物的信息 -->
	<select id="findVehicleByType" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
		SELECT distinct sv.vehicle_id as vehicleId, v.brand as brand,
		sv.sensor_id as sensorId,
		sv.correction_factor_k as correctionFactorK,
		sv.correction_factor_b as correctionFactorB,
		sv.auto_time as autoTime,
		si.sensor_number as sensorNumber,
		si.compensate as compensate,
		si.remark as remark
        FROM zw_m_sensor_vehicle sv
		INNER JOIN (select id,brand from zw_m_vehicle_info where flag = 1 UNION ALL
		select id,people_number as brand from zw_m_people_info where flag = 1 UNION ALL
		select id,thing_number as brand from zw_m_thing_info where flag = 1) v on v.id = sv.vehicle_id
        INNER JOIN zw_m_assignment_vehicle av ON v.id = av.vehicle_id AND av.flag = 1
        INNER JOIN zw_m_assignment a ON a.id = av.assignment_id AND a.flag = 1
        INNER JOIN zw_m_assignment_user au ON av.assignment_id =  au.assignment_id AND au.flag = 1
       	LEFT JOIN zw_m_sensor_info si ON si.id = sv.sensor_id AND si.flag=1
       	INNER JOIN zw_m_config c ON c.vehicle_id = v.id AND c.flag = 1
       	INNER JOIN zw_m_device_info di ON di.id = c.device_id AND di.flag = 1
        WHERE sv.flag = 1 and si.sensor_type=#{sensorType}
        AND au.user_id = #{userId}
        AND a.org_id IN
        <foreach item="item" collection="groupList" open="(" separator="," close=")">
            #{item}
        </foreach>
		<if test="protocols != null and protocols.size > 0">
			and di.device_type IN
			<foreach collection="protocols" item="protocol" open="(" separator="," close=")">
				#{protocol}
			</foreach>
		</if>
        ORDER BY sv.create_data_time DESC
	</select>

	<!-- 查询以及绑定传感器的车辆的信息 参考车牌 -->
	<select id="consultVehicle" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
		SELECT DISTINCT sv.vehicle_id AS vehicleId, v.brand AS brand
		FROM zw_m_sensor_vehicle sv
		INNER JOIN
		(
		SELECT car.id,car.brand FROM zw_m_vehicle_info car WHERE car.flag = 1
		UNION
		SELECT peo.id,peo.people_number AS brand FROM zw_m_people_info peo WHERE peo.flag=1
		UNION
		SELECT th.id,th.thing_number AS brand FROM zw_m_thing_info th WHERE th.flag=1
		) v ON sv.vehicle_id = v.id
		INNER JOIN zw_m_assignment_vehicle av ON v.id = av.vehicle_id AND av.flag = 1
		INNER JOIN zw_m_assignment a ON a.id = av.assignment_id AND a.flag = 1
		INNER JOIN zw_m_assignment_user au ON av.assignment_id =  au.assignment_id AND au.flag = 1
		LEFT JOIN zw_m_sensor_info si ON si.id = sv.sensor_id AND si.flag=1
		INNER JOIN zw_m_config c ON c.vehicle_id = v.id AND c.flag = 1
		INNER JOIN zw_m_device_info di ON di.id = c.device_id AND di.flag = 1
		WHERE sv.flag = 1 AND si.sensor_type=#{sensorType}
		AND au.user_id = #{userId}
		AND a.org_id IN
		<foreach item="item" collection="groupList" open="(" separator=","  close=")">
			#{item}
		</foreach>
		<if test="protocols != null and protocols.size > 0">
			and di.device_type IN
			<foreach collection="protocols" item="protocol" open="(" separator="," close=")">
				#{protocol}
			</foreach>
		</if>
		ORDER BY sv.create_data_time DESC

	</select>

	<select id="findByVehicleId" parameterType="com.zw.platform.domain.vas.f3.TransdusermonitorSet"
			resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
		SELECT
			sv.id,
			sv.vehicle_id vehicleId,
			sv.sensor_id sensorId,
			sv.sensor_out_id sensorOutId,
			sv.alarm_up alarmUp,
			sv.alarm_down alarmDown,
			sv.over_valve overValve,
			sv.correction_factor_k correctionFactorK,
			sv.correction_factor_b correctionFactorB,
			sv.auto_time autoTime,
			si.sensor_number sensorNumber,
			si.baud_rate baudRate,
			si.odd_even_check oddEvenCheck,
			si.compensate compensate,
			si.filter_factor filterFactor,
			si.sensor_type sensorType,
			si.remark remark,
			vi.brand
			FROM
			zw_m_sensor_vehicle sv
			LEFT JOIN zw_m_sensor_info si ON sv.sensor_id = si.id
			AND si.flag = 1
			LEFT JOIN
			(select id,brand from zw_m_vehicle_info where flag = 1 UNION ALL
			select id,people_number as brand from zw_m_people_info where flag = 1 UNION ALL
			select id,thing_number as brand from zw_m_thing_info where flag = 1) vi ON vi.id=sv.vehicle_id
			WHERE
			sv.vehicle_id=#{vehicleId} and si.sensor_type=#{sensorType}
			AND sv.flag = 1 ORDER by sv.sensor_out_id ASC

	</select>

   <select id="findVehicleIdBySensorIdOrsensorType" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet"
		   parameterType="map">
     	SELECT DISTINCT
	        sv.id,
			sv.vehicle_id vehicleId,
	        si.sensor_number sensorNumber,
	        si.sensor_type sensorType
			FROM
			zw_m_sensor_vehicle sv
			INNER JOIN zw_m_sensor_info si ON sv.sensor_id = si.id
			AND si.flag = 1
			INNER JOIN zw_m_vehicle_info vi ON vi.id=sv.vehicle_id and vi.flag=1
			WHERE 1=1
			 <if test="sensorId !=null and sensorId !=''">
			   AND si.id=#{sensorId}
			 </if>
			 <if test="sensorType !=null and sensorType !=''">
			 	AND si.sensor_type=#{sensorType}
			 </if>
			AND sv.flag = 1
   </select>

	<select id="findSensorInfoBySensorType" resultType="com.zw.platform.domain.vas.workhourmgt.SensorSettingInfo">
		SELECT si.id,si.sensor_number,si.baud_rate,si.odd_even_check,si.compensate,si.filter_factor,si.detection_mode
		FROM zw_m_sensor_info si
		WHERE si.flag = 1
		<if test="sensorType != null and sensorType != ''">
			AND si.sensor_type = #{sensorType}
		</if>
		 <if test="detectionMode != null and detectionMode != ''">
			 AND si.detection_mode = #{detectionMode}
		 </if>
	</select>
	<select id="getMonitorBandSensorInfoBySensorType" resultType="com.zw.platform.domain.vas.workhourmgt.SensorSettingInfo">
		select zmsv.*,zmsi.detection_mode from zw_m_sensor_vehicle zmsv
		left join zw_m_sensor_info zmsi on zmsv.sensor_id = zmsi.id and zmsi.flag = 1
		where zmsv.vehicle_id = #{monitorId} and zmsv.flag = 1 and zmsi.sensor_type = #{sensorType}
		order by zmsv.sensor_out_id
	</select>
	<select id="getMonitorBandOilExpendSensorNo" resultType="java.lang.Integer">
		select distinct zoow.device_number from zw_o_oil_wear_vehicle zoowv
		left join zw_o_oil_wear zoow on zoowv.oil_wear_id = zoow.id and zoow.flag = 1
		where zoowv.vehicle_id = #{monitorId} and zoowv.flag = 1
		order by zoow.device_number
	</select>
	<select id="getMonitorListBandSensorInfoBySensorType"
			resultType="com.zw.platform.domain.vas.workhourmgt.SensorSettingInfo">
		select zmsv.*,zmsi.detection_mode from zw_m_sensor_vehicle zmsv
		left join zw_m_sensor_info zmsi on zmsv.sensor_id = zmsi.id and zmsi.flag = 1
		where zmsv.flag = 1 and zmsi.sensor_type = #{sensorType}
		and zmsv.vehicle_id in
		<foreach collection="monitorIdList" item="monitorId" open="(" separator="," close=")">
			#{monitorId}
		</foreach>
		order by zmsv.sensor_out_id
	</select>
	<select id="findVehicleReference" resultType="com.zw.platform.domain.vas.f3.TransdusermonitorSet">
		SELECT DISTINCT sv.vehicle_id AS vehicleId, v.brand AS brand
		FROM zw_m_sensor_vehicle sv
		INNER JOIN
		(
		SELECT car.id,car.brand FROM zw_m_vehicle_info car WHERE car.flag = 1
		UNION
		SELECT peo.id,peo.people_number AS brand FROM zw_m_people_info peo WHERE peo.flag=1
		UNION
		SELECT th.id,th.thing_number AS brand FROM zw_m_thing_info th WHERE th.flag=1
		) v ON sv.vehicle_id = v.id
		INNER JOIN zw_m_assignment_vehicle av ON v.id = av.vehicle_id AND av.flag = 1
		INNER JOIN zw_m_assignment a ON a.id = av.assignment_id AND a.flag = 1
		INNER JOIN zw_m_assignment_user au ON av.assignment_id =  au.assignment_id AND au.flag = 1
		LEFT JOIN zw_m_sensor_info si ON si.id = sv.sensor_id AND si.flag=1
		INNER JOIN zw_m_config c ON c.vehicle_id = v.id AND c.flag = 1
		INNER JOIN zw_m_device_info di ON di.id = c.device_id AND di.flag = 1
		WHERE sv.flag = 1 AND si.sensor_type=#{sensorType}
		AND au.user_id = #{userId}
		AND a.org_id IN
		<foreach item="item" collection="groupList" open="(" separator=","  close=")">
			#{item}
		</foreach>
		AND di.device_type IN
		<foreach collection="reportDeviceTypes" item="deviceType" open="(" separator="," close=")">
			#{deviceType}
		</foreach>
		ORDER BY sv.create_data_time DESC
	</select>

	<delete id="deleteBatchBindByMonitorIds">
		update zw_m_sensor_vehicle
		set flag = 0
		where vehicle_id in
		<foreach collection="monitorIds" item="monitorId" open="(" separator="," close=")">
			#{monitorId}
		</foreach>
	</delete>
</mapper>