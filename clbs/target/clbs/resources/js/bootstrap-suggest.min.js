/*
Bootstrap_Search_Suggest - v0.0.2
Description: 这是一个基于 bootstrap 按钮式下拉菜单组件的搜索建议插件，必须使用于按钮式下拉菜单组件上。
Author: lizhiwen#meizu.com
Github: https://github.com/lzwme/bootstrap-suggest-plugin
Update: 2015-11-18 12:24:39
*/
!
    function (a) {
        a.fn.bsSuggest = function (a) {
            return "string" == typeof a && b[a] ? b[a].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof a && a ? void 0 : b.init.apply(this, arguments)
        };
        // 将三角箭头转换为loading
        var caret = a('.input-group .input-group-btn button i.caret');
        caret.attr('class', 'fa fa-spinner loading-state');
        caret.each(function (index, ele) {
            $(ele).closest('button').addClass('disabled loading-state-button');
        });

        // btn.html('<i class="fa fa-spinner loading-state"></i>');
        var b = {
            init: function (b) {
                function addDelIcon($element) {
                    if ($element.next('i.delIcon')) {
                        $element.next('i.delIcon').remove();
                    }
                    var value = $element.val();
                    if (value.substr(0, 1) == ' ' || value.substr(-1) == ' ') {
                        value = value.replace(/(^\s+)|(\s+$)/g, '');
                        $element.val(value);
                    }
                    if (value != '') {
                        var html = '<i class="delIcon"></i>';
                        $(html).insertAfter($element);
                        $('.delIcon').off('mousedown').on('mousedown', function (e) {
                            delClick($(this));
                            e.stopPropagation();
                        });
                    }
                }

                function delClick($element) {
                    // 测量标定-----start---------
                    var data_id = $element.siblings('input').attr("data-id");
                    if (data_id != undefined && typeof(olicalibrationPages) != 'undefined' && !olicalibrationPages.getCalibrationFlag()) {
                        olicalibrationPages.updateCalibrationStatus(data_id);
                        olicalibrationPages.initForm();
                        olicalibrationPages.initForm2();
                        olicalibrationPages.initForm3();
                    }
                    console.log('111111');
                    $element.siblings('input').attr("data-id", "");
                    // 测量标定-----end---------
                    var thisUL = $element.next('div').children('ul');
                    setTimeout(function () {
                        thisUL.show();
                    }, 30);
                    var input = $element.prev('input');
                    input.val('').css('background', '#ffffff');
                    setTimeout(function () {
                        input.focus();
                    }, 20)
                    /**
                     * author: wushengsong
                     * 这个事件对应点击删除按钮，清空所选数据
                     * 是我后来自己加上去的
                     */
                    input.trigger('onClearSelectValue');
                    $element.remove();
                }

                function c(b, c, d) {
                    return c.is(":visible") ? void setTimeout(function () {
                        d.autoDropup && a(window).height() - b.offset().top < c.height() && b.offset().top > c.height() + a(window).scrollTop() ? c.parents(".input-group").addClass("dropup") : c.parents(".input-group.dropup").removeClass("dropup")
                    }, 100) : ("left" === d.listAlign ? c.css({
                        right: "none"
                    }) : "right" === d.listAlign && c.css({
                        left: "auto",
                        right: "0"
                    }), d.autoMinWidth === !1 ? c.css({}) : c.css("width", "auto"), b)
                }

                function d(a, b) {
                    var c, d, e;
                    return -1 === b.indexId && !b.idField || b.multiWord ? a : (c = a.css("background-color").replace(/ /g, "").split(",", 3).join(","), d = b.inputBgColor || "rgba(255,255,255,0.1)", e = b.inputWarnColor || "rgba(255,255,0,0.1)", !a.val() || a.attr("data-id") ? a.css("background", d) : (-1 === e.indexOf(c) && (a.trigger("onUnsetSelectValue"), a.css("background", e)), a))
                }

                function e(a, b) {
                    var c, d, e = a.parent().find("tbody tr." + s.listHoverCSS);
                    e.length > 0 && (c = (e.index() + 3) * e.height(), d = Number(b.css("max-height").replace("px", "")), b.scrollTop(c > d || b.scrollTop() > d ? c - d : 0))
                }

                function f(a, b) {
                    a = a || $dropdownMenu, b = b || s, a.find("tr." + b.listHoverCSS).removeClass(b.listHoverCSS)
                }

                function g(b) {
                    var c = a(b),
                        d = c.parent(".input-group").find("ul.dropdown-menu"),
                        e = c.data("bsSuggest");
                    return 0 === d.length ? !1 : e ? !1 : (c.data("bsSuggest", {
                        target: b,
                        options: s
                    }), !0)
                }

                function h(b, c, d, e) {
                    var f, g, h, i, m, n, o, p = {
                        value: []
                    };
                    if (b = b || "", e = e || s, e.url) m = -1 !== e.url.indexOf("?") ? "&" : "?", n = e.jsonp ? [e.url + b, m, e.jsonp, "=?"].join("") : e.url + b, a.ajax({
                        type: "POST",
                        url: n,
                        dataType: "json",
                        timeout: 3e3
                    }).done(function (a) {
                        d(c, a, e), c.trigger("onDataRequestSuccess", a), "firstByUrl" === s.getDataMethod && (s.data = a, s.url = null)
                    }).fail(q);
                    else {
                        if (f = e.data, g = j(f)) if (b) {
                            for (o = f.value.length, h = 0; o > h; h++) for (i in f.value[h]) if (a.trim(f.value[h][i]) && (l(i, e) || k(i, e)) && (-1 !== f.value[h][i].toString().indexOf(b) || -1 !== b.indexOf(f.value[h][i]))) {
                                p.value.push(f.value[h]);
                                break
                            }
                        } else p = f;
                        d(c, p, e)
                    }
                }

                function i(a) {
                    return validData = j(a)
                }

                function j(a) {
                    var b = !0;
                    for (var c in a) if ("value" === c) {
                        b = !1;
                        break
                    }
                    return b ? (q("返回数据格式错误!"), !1) : 0 === a.value.length ? !1 : a
                }

                function k(b, c) {
                    return c = c || s, a.isArray(c.effectiveFields) && c.effectiveFields.length > 0 && -1 === a.inArray(b, c.effectiveFields) ? !1 : !0
                }

                function l(b, c) {
                    return -1 !== a.inArray(b, c.searchFields) ? !0 : !1
                }

                function m(a, b, d) {
                    var thisType;
                    var e, f, status, g, h, j, l, m, o = a.parent().find("ul.dropdown-menu"),
                        p = 0,
                        len = 0,
                        q = ['<table class="table table-condensed">'];
                    if (d = d || s, b = i(b), b === !1 || 0 === (e = b.value.length)) return o.empty().hide(), a;
                    var lastValue = a.data('lastvalue');
                    var curId = a.attr("data-id");
                    o.find('tr.hover').removeClass('hover');
                    if (curId) {// 选中项高亮显示
                        o.find('tr[data-id="' + curId + '"]').addClass('hover');
                    }
                    if (a[0].value == lastValue && o.find('table').length > 0) {
                        a.data('lastvalue', a[0].value);
                        return o.show(), a;
                    }
                    a.data('lastvalue', a[0].value);
                    if (d.showHeader) {
                        h = "<thead><tr>";
                        for (g in b.value[0]) k(g) !== !1 && (h += 0 === p ? "<th>" + (d.effectiveFieldsAlias[g] || g) + "(" + e + ")</th>" : "<th>" + (d.effectiveFieldsAlias[g] || g) + "</th>", p++);
                        h += "</tr></thead>", q.push(h)
                    }
                    len = a[0].value.length
                    for (q.push("<tbody>"), f = 0; e > f; f++) {
                        p = 0, j = "", status = b.value[f].status, thisType = b.value[f].type === undefined ? "" : b.value[f].type, l = b.value[f][d.idField] || "", m = b.value[f][d.keyField] || "";
                        for (g in b.value[f]) m || d.indexKey !== p || (m = b.value[f][g]), l || d.indexId !== p || (l = b.value[f][g]), p++, k(g) !== !1 && (j += '<td data-name="' + g + '">' + b.value[f][g] + "</td>");
                        if (status != undefined) {
                            /*var group;
                            if(status == 1){
                                group = 'onBind';
                            }else if(status == 0){
                                group = 'offBind';
                            }*/
                            if (m.indexOf(a[0].value) != -1) {
                                if (status == 1) {
                                    j = '<tr class="bssuggest-row hover" style="background:#dcf5ff;color:#000000;" data-index="' + f + '" data-type="' + thisType + '" data-id="' + l + '" data-key="' + m + '">' + j + "</tr>", q.push(j)
                                } else {
                                    j = '<tr class="bssuggest-row hover" style="background:#fff8b0;color:#000000" data-index="' + f + '" data-type="' + thisType + '" data-id="' + l + '" data-key="' + m + '">' + j + "</tr>", q.push(j)
                                }
                                ;
                            }
                        } else {
                            if (m.indexOf(a[0].value) != -1) {
                                j = '<tr class="bssuggest-row" data-index="' + f + '" data-type="' + thisType + '" data-id="' + l + '" data-key="' + m + '">' + j + "</tr>", q.push(j)
                            }
                        }
                        ;

                    }
                    q.push("</tbody></table>");
                    o.html(q.join(""));
                    n(a, o, d);
                    // o.css("max-height") && Number(o.css("max-height").replace("px", "")) < Number(o.find("table:eq(0)").css("height").replace("px", "")) && Number(o.css("min-width").replace("px", "")) < Number(o.css("width").replace("px", "")) ? o.css("padding-right", "0").find("table:eq(0)").css("margin-bottom", "0") : o.css("padding-right", 0).find("table:eq(0)").css("margin-bottom", 0);
                    c(a, o, d);
                    // o.show();
                    if (curId) {// 选中项高亮显示
                        o.find('tr[data-id="' + curId + '"]').addClass('hover');
                    }
                    o.css('display', 'block');
                    return a;
                }

                // 给每行绑定事件
                function n(b, c, e) {
                    c = c || $dropdownMenu, e = e || s;
                    // c.find("tbody tr").each(function() {
                    // 	// a(this).off("mouseenter").on("mouseenter", function() {
                    // 	// 	f(c, e), a(this).addClass(e.listHoverCSS)
                    // 	// }).
                    //    a(this).off("mousedown").on("mousedown", function() {
                    // 		/*if(!($(this).parents("div.input-group-btn").siblings('i').length > 0)){
                    // 			$('<i class="delIcon delType1"><i>').insertAfter($(this).parents("div.input-group-btn").siblings('input'));
                    // 		}
                    // 		$('.delIcon').unbind('click').on('click',function(){
                    // 			$(this).siblings('input').val('').focus();
                    // 			$(this).hide();
                    // 		})*/
                    // 		var $this = a(this);
                    //        $this.siblings('tr').removeClass('hover');
                    //        $this.addClass('hover');
                    // 		p(b, o($this), e), d(b, e)
                    // 	})
                    // });
                    c.find('tbody').on('mousedown', 'tr', function () {
                        console.log('tr down:', this);
                        var $this = a(this);
                        $this.siblings('tr').removeClass('hover');
                        $this.addClass('hover');
                        p(b, o($this), e), d(b, e);
                        $this.closest('.dropdown-menu').hide();
                    });
                }

                function o(a) {
                    var b = {};
                    return b.id = a.attr("data-id"), b.type = a.attr("data-type"), b.key = a.attr("data-key"), b
                }

                function p(a, b, c) {
                    var d, e = b || {},
                        f = e.id || "",
                        g = e.key || "";
                    c && c.multiWord ? (d = a.val().split(c.separator || " "), d[d.length - 1] = g, a.val(d.join(c.separator || " ")).focus()) : a.attr("data-id", f).focus().val(g), a.trigger("onSetSelectValue", e)
                }

                function q(a, b) {
                    console.trace(a), b && console.trace(b)
                }

                /**
                 * author: 李川
                 * 提取设置下拉选择框宽度公共方法
                 */
                function setUlWidth(val, element) {
                    var ulWidth;
                    if (val.length > 1) {
                        if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 9) {
                            ulWidth = element.parent().width() + 19;
                        } else if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 10) {
                            ulWidth = element.parent().width();
                        } else if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 11) {
                            ulWidth = element.parent().width() - 16;
                        } else {
                            ulWidth = element.parent().width();
                        }
                    } else {
                        ulWidth = element.parent().outerWidth();
                    }
                    /* if(!element){
                         $("#" + btnWhiteID).siblings().children("ul").css({
                             "min-width": ulWidth + "px",
                             "max-width": ulWidth + "px"
                         })
                     }
                     else{*/
                    element.siblings().children("ul").css({
                        "min-width": ulWidth + "px",
                        "max-width": ulWidth + "px"
                    })
                    /* }*/
                }

                var r = this,
                    s = a.extend({
                        url: null,
                        jsonp: null,
                        data: {},
                        showMenu: false,
                        getDataMethod: "firstByUrl",
                        delayUntilKeyup: !1,
                        indexId: 0,
                        indexKey: 0,
                        idField: "",
                        keyField: "",
                        effectiveFields: [],
                        effectiveFieldsAlias: {},
                        searchFields: [],
                        showHeader: !1,
                        showBtn: !0,
                        allowNoKeyword: !0,
                        multiWord: !1,
                        separator: ",",
                        processData: i,
                        getData: h,
                        autoMinWidth: !1,
                        autoDropup: !1,
                        listAlign: "left",
                        inputBgColor: "#fff",
                        inputWarnColor: "rgba(255,0,0,.1)",
                        listStyle: {
                            "padding-top": 0,
                            "max-height": "275px",
                            overflow: "auto",
                            transition: "0.3s",
                            "-webkit-transition": "0.3s",
                            "-moz-transition": "0.3s",
                            "-o-transition": "0.3s"
                        },
                        listHoverStyle: "background: #07d; color:#fff",
                        listHoverCSS: "jhover",
                        keyLeft: 37,
                        keyUp: 38,
                        keyRight: 39,
                        keyDown: 40,
                        keyEnter: 13
                    }, b);
                if (a.isFunction(s.processData) && (i = s.processData), a.isFunction(s.getData) && (h = s.getData), !b.showHeader && s.effectiveFields && s.effectiveFields.length > 1 && (s.showHeader = !0), "firstByUrl" === s.getDataMethod && s.url && !s.delayUntilKeyup) {
                    var t = -1 !== b.url.indexOf("?") ? "&" : "?",
                        u = b.jsonp ? [b.url, t, b.jsonp, "=?"].join("") : b.url;

                    a.ajax({
                        type: "POST",
                        url: u,
                        dataType: "json",
                        timeout: 5e3
                    }).done(function (b) {
                        s.data = b, s.url = null, a(r).trigger("onDataRequestSuccess", b)
                    }).fail(function (a, b) {
                        console.error(u + " : " + b)
                    })
                }
                // if(!window['__bs_suggest_add_style']){
                //    a("head:eq(0)").append("<style>." + s.listHoverCSS + "{" + s.listHoverStyle + "}</style>");
                //    window['__bs_suggest_add_style'] = true;
                // }
                return r.each(function () {
                    var i = a(this), pointerInControl = false,
                        j = i.parents(".input-group:eq(0)").find("ul.dropdown-menu");
                    var wraper = i.closest(".input-group");
                    var btn = wraper.find('.input-group-btn button');
                    btn.removeClass('disabled loading-state-button').find('.loading-state').attr("class", 'caret')
                    return g(this) === !1 ? void console.warn() : (s.showBtn || i.css("border-radius", "4px").parents(".input-group:eq(0)").css("width", "100%").find(".input-group-btn>.btn").hide(), i.removeClass("disabled").attr("disabled", !1).attr("autocomplete", "off"), j.css(s.listStyle), s.inputBgColor || (s.inputBgColor = i.css("background-color")), i.on("keydown", function (b) {
                        var c, d = "";
                        //"none" !== j.css("display") && (c = j.find("." + s.listHoverCSS), d = "", b.keyCode === s.keyDown ? (0 === c.length ? d = o(j.find("table tbody tr:first").mouseover()) : 0 === c.next().length ? (f(j, s), a(this).val(a(this).attr("alt")).attr("data-id", "")) : (f(j, s), 0 !== c.next().length && (d = o(c.next().mouseover()))), e(i, j)) : b.keyCode === s.keyUp ? (0 === c.length ? d = o(j.find("table tbody tr:last").mouseover()) : 0 === c.prev().length ? (f(j, s), a(this).val(a(this).attr("alt")).attr("data-id", "")) : (f(j, s), 0 !== c.prev().length && (d = o(c.prev().mouseover()))), e(i, j)) : b.keyCode === s.keyEnter ? j.hide().empty() : a(this).attr("data-id", ""), d && "" !== d.key && p(a(this), d, s))
                    }).on("keyup", function (c) {
                        var e, f;
                        if (c.keyCode === s.keyDown || c.keyCode === s.keyUp || c.keyCode === s.keyEnter) {
                            a(this).val(a(this).val());
                            d(i, s);
                        } else {
                            var trimValue = a(this).val().trim();
                            a(this).val(trimValue);
                            a(this).attr("data-id", "");
                            d(i, s);
                            e = trimValue;
                            if ("" === a.trim(e) || e !== a(this).attr("alt")) {
                                a(this).attr("alt", a(this).val());
                                if (b.multiWord) {
                                    f = e.split(s.separator || " ");
                                    e = f[f.length - 1];
                                }
                                if (0 !== e.length || s.allowNoKeyword) {
                                    h(a.trim(e), i, m, s);
                                }
                            }

                        }
                        // return c.keyCode === s.keyDown || c.keyCode === s.keyUp || c.keyCode === s.keyEnter
                        // 	? (a(this).val(a(this).val()), void d(i, s))
                        // 	: (a(this).attr("data-id", ""), d(i, s), e = a(this).val(), void(("" === a.trim(e) || e !== a(this).attr("alt")) && (a(this).attr("alt", a(this).val()), b.multiWord && (f = e.split(s.separator || " "), e = f[f.length - 1]), (0 !== e.length || s.allowNoKeyword) && h(a.trim(e), i, m, s))))
                    }).on("focus", function () {
                        if ($(this).val() != '') {
                            var $this = $(this);
                            addDelIcon($this);
                        }
                        c(i, j, s);
                        pointerInControl = true;
                        s.showMenu = true;

                        var btnWhiteID = $(this).attr("id");
                        var val = navigator.appVersion.split(";");
                        //设置下拉框宽度
                        setUlWidth(val, $(this));
                    }).on('input propertychange', function () {
                        /*if ($(document.activeElement) != $(this))
                            return;*/
                        var $this = $(this);
                        var inputWidth = $this.parent('div').width();
                        $this.siblings('div').children('ul').css('width', inputWidth + 'px');
                        // axh 2017/7/6
                        var e, f;
                        if (s.showMenu) {
                            addDelIcon($(this));
                            return c.keyCode === s.keyDown || c.keyCode === s.keyUp || c.keyCode === s.keyEnter ? (a(this).val(a(this).val()), void d(i, s)) : (/*a(this).attr("data-id", ""),*/ d(i, s), e = a(this).val(), void(("" === a.trim(e) || e !== a(this).attr("alt")) && (a(this).attr("alt", a(this).val()), b.multiWord && (f = e.split(s.separator || " "), e = f[f.length - 1]), (0 !== e.length || s.allowNoKeyword) && h(a.trim(e), i, m, s))))
                        }
                    }).on("blur", function (e) {
                        $(this).next('i.delIcon').remove();
                        if (pointerInControl == false) {
                            j.css("display", "none")
                        }
                        $('body').on('click', function () {
                            if (pointerInControl == false) {
                                j.css("display", "none")
                            }
                        })
                    }).on("keydown", function (e) {
                        var key = e.which;
                        var $dropdownMenu = $(this).siblings('.input-group-btn').find('ul.dropdown-menu');
                        switch (key) {
                            case 9://键盘tab键
                                $dropdownMenu.hide();
                                break;
                            case 38://向上方向键
                                break;
                            case 40://向下方向键
                                break;
                        }
                    }).on("click", function () {
                        s.showMenu = true;
                        $(".input-group-btn ul.dropdown-menu").hide();
                        //文本框点击
                        var btnWhiteID = $(this).attr("id");
                        var val = navigator.appVersion.split(";");
                        //设置下拉框宽度
                        setUlWidth(val, $(this));
                        $(window).resize(function () {
                            setUlWidth(val, $(this));
                        });
                        var b, c = a(this).val();
                        return "" !== a.trim(c) && c === a(this).attr("alt") && j.find("table tr").length ? j.show() : void("none" === j.css("display") && (s.multiWord && (b = c.split(s.separator || " "), c = b[b.length - 1]), (0 !== c.length || s.allowNoKeyword) && h(a.trim(c), i, m, s)))
                    }), i.parent().find("button:eq(0)").attr("data-toggle", "").on("click", function () {
                        pointerInControl = true;
                        //按钮点击
                        s.showMenu = true;
                        $(this).closest('div').siblings("input[type='text']").focus();
                        var btnWhiteID = $(this).closest('div').siblings("input[type='text']").attr("id");

                        var val = navigator.appVersion.split(";");
                        setUlWidth(val, $('#' + btnWhiteID));

                        /*var width;
                        if (val.length > 1) {
                            if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 9) {
                                width = $(this).parent().parent().width() + 19;
                            } else if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 10) {
                                width = $(this).parent().parent().width();
                            } else if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 11) {
                                width = $(this).parent().parent().width() - 16;
                            } else {
                                width = $(this).parent().parent().width();
                            }
                        } else {
                            width = $(this).parent().parent().width();
                        }
                        $(this).siblings("ul").css({"min-width": width + "px", "max-width": width + "px"});*/
                        $(window).resize(function () {
                            setUlWidth(val, $('#' + btnWhiteID));
                            /*var ulWidth;
                            if (val.length > 1) {
                                if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 9) {
                                    ulWidth = $("#" + btnWhiteID).parent().width() + 19;
                                } else if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 10) {
                                    ulWidth = $("#" + btnWhiteID).parent().width();
                                } else if (parseInt(val[1].replace(/[ ]/g, "").replace("MSIE", "")) == 11) {
                                    ulWidth = $("#" + btnWhiteID).parent().width() - 16;
                                } else {
                                    ulWidth = $("#" + btnWhiteID).parent().width();
                                }
                            } else {
                                ulWidth = $("#" + btnWhiteID).parent().width();
                            }
                            $("#" + btnWhiteID).siblings().children("ul").css({
                                "min-width": ulWidth + "px",
                                "max-width": ulWidth + "px"
                            });*/
                        });
                        var a;
                        var value = i.context.value;
                        var id = $(this).closest('div').siblings("input[type='text']").attr("id");
                        i.context.alt = '';
                        i.context.value = '';
                        "none" === j.css("display") ? (a = "block", s.url ? i.click().focus() : (m(i, s.data, s), c(i, j, s))) : a = "none", j.css("display", a)
                        if (id) {
                            $("#" + id).val(value);
                        } else {
                            i.context.value = value;
                        }
                    }), void wraper.on("mouseenter", function () {
                        pointerInControl = true
                        // a(this).show()
                    }).on("mouseleave", function () {
                        // i.focus()
                        pointerInControl = false
                    }).on("click", function (e) {
                        //if(window.navigator.userAgent.indexOf("MSIE")>0){
                        // 	$(this).hide()
                        //}
                    }))
                })
            },
            show: function () {
                var a = this.data("bsSuggest");
                return a && a.options && this.parent().find("ul.dropdown-menu").show(), this
            },
            hide: function () {
                var a = this.data("bsSuggest");
                return a && a.options && this.parent().find("ul.dropdown-menu").css("display", ""), this
            },
            disable: function () {
                return a(this).data("bsSuggest") ? void a(this).attr("disabled", !0).parent().find(".input-group-btn>.btn").addClass("disabled") : !1
            },
            enable: function () {
                return a(this).data("bsSuggest") ? void a(this).attr("disabled", !1).parent().find(".input-group-btn>.btn").removeClass("disabled") : !1
            },
            destroy: function () {
                a(this).siblings('.input-group-btn').find('>ul.dropdown-menu').html('');
                a(this).off().removeData("bsSuggest").parent().find(".input-group-btn>.btn").off()
            },
            version: function () {
                return "0.0.1"
            }
        }
    }(window.jQuery);